 function startWithOfflineResources() {
     var resources;
     // If we have resources saved from a previous visit, use them
     if (localStorage && localStorage.resources) {
         resources = JSON.parse(localStorage.resources);
         startWithResources(resources, false);
         // Otherwise, apologize and let the user know
     } else {
         alert(APP_START_FAILED);
     }
 }
/*callback function*/
 function feed(contextValue, reObj, reStatus, errorDetails) {
     var articles = [],
         obj = {},
         content = reObj.feed.entries;
     //rss来源网站名称
     //            articles.push("<h2>" + reObj.feed.title + "</h2>");
     //rss内容
     for (var i = 0, len = content.length; i < len; i++) {
         obj["id"] = i + 1;
         obj["date"] = new Date(content[i].publishedDate).toLocaleString();
         obj["title"] = content[i].title;
         obj["body"] = content[i].content;
         obj["author"] = content[i].author;
         obj["link"] = content[i].link;
         articles.push(obj);
         obj = {};
     }
     APP.article.deleteArticles(function () {
         APP.article.insertArticles(articles, function () {
             /*
              * Instead of the line below we *could* just run showArticeList() but since
              * we already have the articles in scope we needn't make another call to the
              * database and instead just render the articles straight away.
              */
             $("#body").html(APP.templates.articleList(articles));
         });
     });
 }



 window.APP = {};
 /*-----------------------------------------------templates.js------------------------------------------------------*/
 APP.templates = (function () {
     'use strict';

     function home() {
         return '<a id="logo"  class="fa fa-moon-o" href="#">资讯</a><span class="fa fa-bars" id="barsBt" ></span>';
     }

     function subPage() {
         return '<a id="return" class="fa fa-angle-left" href="#">返回</a><a class="fa fa-bars" id="barsBt" ></a>';
     }


     function articleList(articles) {
         var i, l, output = '';

         if (!articles.length) {
             APP.articlesController.synchronizeWithServer();
         }
         APP.templates.hide([$("#loading"), $("#form")]);
         for (i = 0, l = articles.length; i < l; i = i + 1) {
             output = output + '<li><h2><a href="#' + articles[i].id + '" data-transition="flow">' + articles[i].title + '</a></h2>' +
                 '<p class="byline">作者：<strong>' + articles[i].author + '</strong> ，发表日期：' + articles[i].date + '</p></li>';
         }
         return '<ul>' + output + '</ul>';
     }

     function article(articles) {

         // If the data is not in the right form, redirect to an error
         if (!articles[0]) {
             window.location = '#error';
         }
         APP.templates.hide([$("#loading"), $("#form")]);
         return '<h2 id="articleTitle">' + articles[0].title + '</h2><div class="author">作者：' + articles[0].author + ' <br>发表日期：' + articles[0].date + '</div>' + articles[0].body;
     }

     function show(ele) {
         ele.addClass("show");
     }

     function hide(ele) {
         var i, len = ele.length;
         if (len > 1) {
             for (i = 0; i < len; i++) {
                 ele[i].removeClass("show");
             }
         } else {
             ele.removeClass("show");
         }
     }

     /*-----------------------------------applicationcontroller.js----------------------------------*/
     APP.applicationController = (function () {
         'use strict';

         function offlineWarning() {
             alert("This feature is only available online.");
         }

         function pageNotFound() {
             alert("That page you were looking for cannot be found.");
         }

         /*    function showHome1() {
//        $("#body").html(APP.templates.home());

        // Load up the last cached copy of the news
        APP.articlesController.showArticleList();

        $('#refreshButton').click(function () {
            // If the user is offline, don't bother trying to synchronize
            if (navigator && navigator.onLine === false) {
                offlineWarning();
            } else {
                APP.articlesController.synchronizeWithServer(offlineWarning);
            }
        });
    }*/

         function showArticle(id) {
             //        $("#body").html(APP.templates.show($("#loading")));
             APP.templates.show($("#loading"));
             APP.articlesController.showArticle(id);
         }

         function route() {
             var page = window.location.hash;
             if (page) {
                 page = page.substring(1);
                 if (parseInt(page, 10) > 0) {
                     showArticle(page);
                 } else {
                     pageNotFound();
                 }
             } else {
                 APP.articlesController.showArticleList();
             }
         }


         // This is to our webapp what main() is to C, $(document).ready is to jQuery, etc
         function start(resources, storeResources) {
             APP.database.open(function () {

                 // Listen to the hash tag changing
                 $(window).bind("hashchange", route);

                 // Create app elements
                 $("header").html(APP.templates.home());
                 $("header").on("click", "#logo,#return", function (e) { //传入的目标事件不需要$("#logo"),直接#logo就行
                     $("#mask").css("display", "none");
                     APP.templates.hide([$("#loading"), $("#form")]);
                 }).on("click", "#barsBt", function () {
                     $("#mask").css("display", "block")
                 })
                 //listen event
                 $('#refreshBtn').click(function () {
                     $("#mask").css("display", "none");
                     // If the user is offline, don't bother trying to synchronize
                     if (navigator && navigator.onLine === false) {
                         offlineWarning();
                     } else {
                         APP.articlesController.synchronizeWithServer();
                     }
                 });

                 $("#searchBtn").click(function () {
                     $("#mask").css("display", "none");
                     APP.templates.show($("#form"));
                 });

                 $("#submitBtn").click(function () {
                     APP.templates.hide($("#form"));
                     APP.articlesController.synchronizeWithServer();
                 });
                 // Remove our loading splash screen
                 APP.templates.hide($("#loading"));

                 route();
             });

             if (storeResources) {
                 localStorage.resources = JSON.stringify(resources);
             }
         }

         return {
             start: start
         };
     }());


     return {
         home: home,
         subPage: subPage,
         articleList: articleList,
         article: article,
         show: show,
         hide: hide
     };
 }());

 /*-------------------------------------articlesController.js------------------------------------*/
 APP.articlesController = (function () {
     'use strict';

     function showArticleList(id, successCallback) {
         APP.article.selectBasicArticles(function (articles) {
             $("header").html(APP.templates.home());
             $("#body").html(APP.templates.articleList(articles));
         });
     }

     function showArticle(id, successCallback) {
         APP.article.selectFullArticle(id, function (article) {
             $("header").html(APP.templates.subPage());
             $("#body").html(APP.templates.article(article));
         });
     }

     function synchronizeWithServer() {
         var script = document.createElement("script"),
             urlText = $("#urlText").val();
         while ($(".getRss")[0]) {
             $(".getRss")[0].parentNode.removeChild($(".getRss")[0]);
         }
         script.type = "text/javascript";
         script.className = "getRss";
         script.src = "http://ajax.googleapis.com/ajax/services/feed/load?q=" + urlText + "&v=2.0&callback=feed&context=c&num=15";
         document.body.appendChild(script);
         APP.templates.show($("#loading"));
     }


     return {
         synchronizeWithServer: synchronizeWithServer,
         showArticleList: showArticleList,
         showArticle: showArticle
         //        getDataSuccess:getDataSuccess
     };
 }());


 var str = "hello";
 str += " world!";
 /*-------------------------------articles.js----------------------------------------------*/
 APP.article = (function () {
     'use strict';

     function deleteArticles(successCallback) {
         APP.database.runQuery("DELETE FROM articles", [], successCallback);
     }

     function insertArticles(articles, successCallback) {
         var remaining = articles.length,
             i, l, data = [];

         if (remaining === 0) {
             successCallback();
         }

         // Convert article array of objects to array of arrays
         for (i = 0, l = articles.length; i < l; i = i + 1) {
             data[i] = [articles[i].id, articles[i].date, articles[i].title, articles[i].author, articles[i].body, articles[i].link];
         }

         APP.database.runQuery("INSERT INTO articles (id, date, title, author, body,link) VALUES (?, ?, ?, ?, ?,?);", data, successCallback);
     }

     function selectBasicArticles(successCallback) {
         APP.database.runQuery("SELECT id, title, date, author,link FROM articles", [], successCallback);
     }

     function selectFullArticle(id, successCallback) {
         APP.database.runQuery("SELECT id, title, date, author, body ,link FROM articles WHERE id = ?", [id], successCallback);
     }

     return {
         insertArticles: insertArticles,
         selectBasicArticles: selectBasicArticles,
         selectFullArticle: selectFullArticle,
         deleteArticles: deleteArticles
     };
 }());

 /*--------------------------------------------database.js----------------------------------------------*/
 APP.database = (function () {
     'use strict';

     var smallDatabase;

     function runQuery(query, data, successCallback) {
         var i, l, remaining;

         if (!(data[0] instanceof Array)) {
             data = [data];
         }

         remaining = data.length;

         function innerSuccessCallback(tx, rs) {
             var i, l, output = [];
             remaining = remaining - 1;
             if (!remaining) {

                 // HACK Convert row object to an array to make our lives easier
                 for (i = 0, l = rs.rows.length; i < l; i = i + 1) {
                     output.push(rs.rows.item(i));
                 }
                 if (successCallback) {
                     successCallback(output);
                 }
             }
         }

         function errorCallback(e) {
             console.log(e.message);
         }

         smallDatabase.transaction(function (tx) {
             for (i = 0, l = data.length; i < l; i = i + 1) {
                 tx.executeSql(query, data[i], innerSuccessCallback, errorCallback);
             }
         });
     }

     function open(successCallback) {
         if (!smallDatabase) {
             smallDatabase = openDatabase("APP", "1.0", "A Rss Reader", (5 * 1024 * 1024));
         }
         runQuery("CREATE TABLE IF NOT EXISTS articles(id INTEGER PRIMARY KEY ASC, date TIMESTAMP, author TEXT, title TEXT, body TEXT,link TEXT)", [], successCallback);
     }

     return {
         open: open,
         runQuery: runQuery
     };
 }());